--  This model completes the PING example by adding deployment
--  information.
--
--  In this deployment, two nodes are defined, one task per node.
package PING
public
  	with Data_Model;
  	with Deployment;
  	with ocarina_drivers;
  	with ocarina_buses;

data value_t
properties
	Data_Model::Data_RePresentation=>Integer;
end value_t;

subprogram Do_Ping_Spg
features
  	Data_Source : out parameter value_t;
properties
 	source_language => C;
 	source_name     => "user_do_ping_spg";
  	source_text     => ("ping.c");
end Do_Ping_Spg;

subprogram Ping_Spg
features
  	Data_Sink : in parameter value_t;
properties
  	source_language => C;
  	source_name     => "user_ping_spg";
  	source_text     => ("ping.c");
end Ping_Spg;


thread P
features
  	Data_Source : out event data port value_t;
end P;

thread implementation P.Impl
calls 
Mycalls: {
  	P_Spg : subprogram Do_Ping_Spg;
};
connections
  	parameter P_Spg.Data_Source -> Data_Source;
properties
  	Dispatch_Protocol                  => Periodic;
  	Period                             => 2000 Ms;
  	Deadline                           => 2000 ms;
  	Priority                           => 2;
  	Dispatch_Offset                    => 500 Ms;
end P.Impl;

thread Q
features
  	Data_Sink : in event data port value_t;
end Q;

thread implementation Q.Impl
calls 
Mycalls: {
  	Q_Spg : subprogram Ping_Spg;
};
connections
  	parameter Data_Sink -> Q_Spg.Data_Sink;
properties
  	Dispatch_Protocol                  => Sporadic;
  	Period                             => 10 Ms;
  	deadline                           => 10 Ms;
  	Priority                           => 1;
end Q.Impl;

processor the_processor
properties
  	Deployment::location           => "127.0.0.1";
  	Deployment::Execution_Platform => Native;
  	Priority_Range                 => 0 .. 255;
  	Scheduling_Protocol => (Posix_1003_Highest_Priority_First_Protocol);
end the_processor;

process A
features
  	Out_Port : out event data port value_t;
end A;

process implementation A.Impl
subcomponents
  	Pinger        : thread P.Impl;
connections
  	port Pinger.Data_Source -> Out_Port;
end A.Impl;

process B
features
  	In_Port  : in event data port value_t;
end B;

process implementation B.Impl
subcomponents
  	Ping_Me        : thread Q.Impl;
connections
  	port In_Port -> Ping_Me.Data_Sink;
end B.Impl;

system PING
end PING;

system implementation PING.Impl
subcomponents
  	Node_A : process A.Impl;
  	Node_B : process B.Impl;

  	Device_A : device ocarina_drivers::generic_sockets_ip.pohic
    	{Source_Text => ("devicesconf.c");};
  	Device_B : device ocarina_drivers::generic_sockets_ip.pohic
    	{Source_Text => ("devicesconf.c");};

  	CPU_A : processor the_processor;
  	CPU_B : processor the_processor;
  	the_bus : bus ocarina_buses::ip.i;
connections
  	bus access the_bus -> Device_A.link;
  	bus access the_bus -> Device_B.link;

  	port Node_A.Out_Port -> Node_B.In_Port
    	{Actual_Connection_Binding => (reference (the_bus));};
properties
  	actual_processor_binding => reference (CPU_A) applies to Node_A;
  	actual_processor_binding => reference (CPU_B) applies to Node_B;
  	actual_processor_binding => (reference (CPU_A)) applies to Device_A;
  	actual_processor_binding => (reference (CPU_B)) applies to Device_B;
end PING.Impl;

end PING;
